version: "3.8"
services:
  mongodb:
    image: mongo:4.4.2
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - ms-network

  mysqldb:
    image: mysql
    ports:
      - "3306:3306"
    networks:
      - ms-network
    environment:
      - "MYSQL_ROOT_PASSWORD=mysql"
    volumes:
      - ./init:/docker-entrypoint-initdb.d

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.2
    command:
      - start-dev
    ports:
      - "8080:8080"
    networks:
      - ms-network
    environment:
      KEYCLOAK_ADMIN: root
      KEYCLOAK_ADMIN_PASSWORD: root
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    volumes:
      - ./keycloak/config:/opt/keycloak/data/import

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      - ms-network
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    networks:
      - ms-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    networks:
      - ms-network
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Eureka Server
  discovery-server:
    image: karlenayvazyandocker/dscovery-service
    pull_policy: always
    hostname: discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    networks:
      - ms-network
    depends_on:
      - zipkin

  api-gateway:
    image: karlenayvazyandocker/api-gateway
    pull_policy: always
    ports:
      - "8181:8080"
    networks:
      - ms-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  product-service:
    image: karlenayvazyandocker/product-service
    container_name: product-service
    pull_policy: always
    networks:
      - ms-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - discovery-server
      - api-gateway

  order-service:
    image: karlenayvazyandocker/order-service
    container_name: order-service
    pull_policy: always
    networks:
      - ms-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysqldb
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  inventory-service:
    image: karlenayvazyandocker/inventory-service
    container_name: inventory-service
    pull_policy: always
    networks:
      - ms-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysqldb
      - discovery-server
      - api-gateway

  notification-service:
    image: karlenayvazyandocker/notification-service
    container_name: notification-service
    pull_policy: always
    networks:
      - ms-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway

networks:
  ms-network:
    driver: bridge

volumes:
  keycloak_data:
    external: false